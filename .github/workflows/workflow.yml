name: Main workflow

on:
  - pull_request
  - push

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v18
    - name: "Run nix flake check"
      run: nix flake check
    - name: "Run nix build"
      run: nix develop -c dune runtest

  build_and_test:
    name: Build and test
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        ocaml-compiler:
          - 5.1.x
          - 5.2.x

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global core.ignorecase false

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          opam-local-packages: lev.opam lev-fiber.opam lev-fiber-csexp.opam

      - run: opam install --deps-only --with-doc --with-test .
      - run: opam exec -- dune build
      - run: opam exec -- dune runtest

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ocaml-compiler:
          - 5.2.x
    steps:
      - uses: actions/checkout@v3
      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          opam-local-packages: lev.opam lev-fiber.opam lev-fiber-csexp.opam

      - name: Set git user
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email github-actions[bot]@users.noreply.github.com
    
      - name: Install deps
        run: |
          opam install . --deps-only --with-doc --with-test
          opam install bisect_ppx
      - name: Run and send coverage
        run: |
          opam exec -- dune build --instrument-with bisect_ppx --force @runtest
          opam exec -- bisect-ppx-report send-to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_NUMBER: ${{ github.event.number }}
